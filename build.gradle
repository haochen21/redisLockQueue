/*
 * This build file was auto generated by running the Gradle 'init' task
 * by 'Administrator' at '16-10-25 下午4:19' with Gradle 2.14.1
 *
 * This generated file contains a sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * user guide available at https://docs.gradle.org/2.14.1/userguide/tutorial_java_projects.html
 */

// Apply the java plugin to add support for Java
apply plugin: 'java'

// In this section you declare where to find the dependencies of your project
repositories {
    // Use 'jcenter' for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
}

// In this section you declare the dependencies for your production and test code
dependencies {
    // The production code uses the SLF4J logging API at compile time
    compile 'org.slf4j:slf4j-api:1.7.21'
    compile 'org.slf4j:jcl-over-slf4j:1.7.19'
    compile 'ch.qos.logback:logback-classic:1.1.6'
    
    compile 'redis.clients:jedis:2.9.0'
    compile 'org.springframework:spring-context:4.3.0.RELEASE'
    compile "org.springframework:spring-jms:4.3.0.RELEASE"
    compile "org.springframework:spring-messaging:4.3.0.RELEASE" 
    
    compile 'com.fasterxml.jackson.core:jackson-annotations:2.7.5'    
    compile 'com.fasterxml.jackson.core:jackson-core:2.7.5'
    compile 'com.fasterxml.jackson.core:jackson-databind:2.7.5'
    
    compile "org.apache.activemq:activemq-client:5.13.3"
    
    // Declare the dependency for your favourite test framework you want to use in your tests.
    // TestNG is also supported by the Gradle Test task. Just change the
    // testCompile dependency to testCompile 'org.testng:testng:6.8.1' and add
    // 'test.useTestNG()' to your build script.
    testCompile 'junit:junit:4.12'
    testCompile 'org.springframework:spring-test:4.3.0.RELEASE'
}
